DP
  状态表示 f(i,j)数组
    表示的集合 
      条件1:  只从前i个物品中选
      条件2:  总体积小于等于 <= j   ==>  所有从前i个物品种选取,总体积<=j的选法的集合,其值即为总价值的最大值
    表示的属性->f(i,j)的值(Max)  ==>  总价值的最大值
  状态计算
    集合划分
      n种情况: 第i个物品选择的数量为0/1/2/3/4/....n  f(i,j) = max  [f(i-1,j, f(i-1,j-k*Vi)+k*Wi]
      
DP优化
  f[i][j] = max(f[i-1][j], f[i-1][j-v[i]]+w[i], f[i-1][j-2*v[i]]+2*w[i], f[i-1][j-3*v[i]]+3*w[i], ... )
  f[i][j-v[i]] = max(    f[i-1][j-v[i]],        f[i-1][j-2*v[i]]+w[i],    f[i-1][j-3*v[i]]+2*w[i], f[i-1][j-4*v[i]]+3*w[i], ... )
  ==>  f[i][j] = max(f[i-1][j], f[i][j-v[i]]+w[i])


与01背包不同的地方
  物品使用次数不限  ==>
    赋值后使用 i, 而非 i-1
    正序
