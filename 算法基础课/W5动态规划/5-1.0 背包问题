01背包          每件物品最多使用一次
完全背包        每件物品有无限个使用次数
多重背包        每个物品的使用次数不一样
  多重...朴素版
  多重...优化版
分组背包        N组物品,每组物品若干种  ==>  每组物品最多选一种





DP
  状态表示 f(i,j) 
    状态1-表示的为集合 (eg:选法的集合)
      条件1:  只从前i个物品中选
      条件2:  总体积小于等于 <= j   ==>  所有从前i个物品种选取,总体积<=j的选法的集合,其值即为总价值的最大值
    状态2-表示的为属性->f(i,j)的值 (集合的属性eg:Max, Min, 数量)  ==>  总价值的最大值
  状态计算 
    集合划分 (要求:不重不漏)
      两种情况: 第i个物品选择/不选择    f(i,j) = max  [f(i-1,j, /f(i-1,j-Vi)+Wi]
DP优化  
    一般是对DP问题的代码或者是计算方程做一个等价变型





f(i,j) ==> f(N,V)


集合划分  f(i,j) =  max ( 不含i, 含i)
  不含i  f(i-1,j)
  含i    f(i-1,j-Vi) + Wi


