名称: Trie树 / 字典树
介绍
  是一个树形结构. 专门处理字符串匹配的数据结构, 用来解决在一组字符串集合中快速查找某个字符串的问题
  
  
思想:
  一个root下面有许多层状结构,每层有若干个节点
  每个节点代表一个 字母/数字(元素的组成单位)
  由上至下,每一层的子节点相连构成 一个单词/某数字(完整的一个元素)
  标记代表最后一个基本构成的的节点(元素的最后一个组成单位),用以表示遍历至此有个完整的元素

表示:
  利用二维数组来表示节点
    节点的值为idx,用以表示节点的存在和索引
    二维数组的一维[]用以记录层数, 二维[]用以区分元素的组成单位(26个字母/二进制数中的0和1 等等)
      EG:son[layer][26] = idx 为某一节点, 则表示第layer层的某一结点,该结点种类为元素的第26个组成单位
  利用count[]数组来记录元素最后一个构成节点的标记
    []内为idx,值为以该节点为标记的元素的个数(每个节点的idx不同,因此不会出现代指冲突)



https://www.acwing.com/activity/content/problem/content/883/
https://www.acwing.com/problem/content/837/

https://www.acwing.com/activity/content/problem/content/884/
https://www.acwing.com/problem/content/145/
