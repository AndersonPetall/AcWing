名称: Trie树 / 字典树
介绍
  是一个树形结构. 专门处理字符串匹配的数据结构, 用来解决在一组字符串集合中快速查找某个字符串的问题
  
  
思想:
  一个root下面有许多子节点
  每个子节点代表一个 字母/数字(元素的组成单位)
  由上至下,子节点相连构成 一个单词/某数字(完整的一个元素),代表最后一个基本构成的的节点标记,用以表示遍历至此有个完整的元素

表示:
  利用二维数组来表示节点
    节点的值为idx,用以表示节点的存在和索引
    二维数组的一维[]用以记录idx从而构成索引, 二维[]用以区分元素的组成单位(26个字母/二进制数中的0和1 等等)
      EG:son[val][26] = idx 为某一节点, 则 son[idx][26] 为这个节点的某一子节点
  利用count[]数组来记录元素最后一个构成节点的标记,索引为idx,值为以该节点为标记的元素的个数(每个节点的idx不同,因此不会出现代指冲突)
