欧几里德算法-Euclidean algorithm,  又称为辗转相除法(另一种求两数的最大公约数的方法是更相减损法)
  核心原理:两个整数的最大公约数等于其中较小的数和两数的差的最大公约数 
  
  
构建:
gcd(int a, int b){
  return b ? gcd(b, a % b) : a;
}
证明:
1.0 a和b的公约数 和 a%b 相同
  假设x代表 a和b的公约数, 则 x|a 并且 x|b  ==>  x1 = a/x, x2 = b/x
  a % b = x1*x % x2*x
  ==> a % b = (x1%x2) * x  &&  X1%x2 一定为正整数
  ==> a%b 的公约数与 a和b 的一样
2.0 辗转相除法的结果为最大的公约数  ==>  当求出最大的公约数的时候,余数为0,即停止
  将a和b拆为两部分, 一部分为公倍数,另一部分为该整数除以公倍数的倍数
    a = x * na  b = x * nb 
    算法的核心思想为: na和nb 互相消减,一旦na%nb == 0 nb*x即为最大公约数
