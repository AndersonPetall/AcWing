思想: 利用质数来筛出后续合数


朴素筛法
思想:
  若当前的数没有标记,则为质数
  无论当前的数是否标记,利用当前的数筛出后续的合数,进行标记
时间复杂度: nlogn
时间复杂度分析:  合数会被每个整数重复标记
O = n/2 + n/3 + n/4 + ....n/n
  = n(1/2 + 1/3 + .... 1/n)  (调和级数)
  = n(lnn + c) ~ n*lnn < nlog2(n) = nlogn


埃氏筛法
思想:
  若当前的数没有标记,则为质数
    利用当质前的数筛出后续的合数,进行标记
时间复杂度: nloglogn
时间复杂度分析:  合数会被质数重复标记
O = n/2 + n/3 + n/5 + ....n/n
  质数定理:  1-n中有 n/lnn个质数
  粗略  (n/lnn)*lnn = n
  真实  nloglogn
  
  
线性筛法
思想:  把每个合数利用其最小质因子删除  ==>  合数N只会被其最小质因子删除  (利用当前遍历的数和质数序列来筛选出后续的合数)
  若当前的数没有标记,则为质数
  无论当前的数是否标记,从小到大遍历已存在的质数
    利用质数和当前的数对后续的合数进行标记
    若当前遍历的质数为当前的数的质因子(一定为最小的质因子),则退出循环  
时间复杂度: n
时间复杂度分析:  每个合数只会被标记一次(只会被其最小的质因子标记)


理解: 
  pj和i的含义: pj为某合数的最小质因子, i为最小质因数对应的最大因子, 合数st[pj * i] 仅被其最小的质因子pj所筛选
  break判断的条件: 当前pj为当前i的最小质因子
    如果不break, 则表达当前的 pj为 pj1, i = n * pj1  
    ++j ==> st[pj2 * ] ==> st[pj2 * n * pj1] 
    pj2 > pj1  pj2不是合数st[pj2 * i]的最小质因子,但也将合数st[pj2 * i]筛选
    ==>  合数st[pj2 * i] 不仅被其最小的质因子pj1所筛选,也被pj2所筛选,与基础思想相矛盾
线性筛法模拟:
    i = 2, pr[0] = 2
    j = 0, st[2*2] = st[4] = true; i % pr[0] = 0 break
  i = 3, pr[1] = 3
    j = 0, st[2*3] = st[6] = true
    j = 1, st[3*3] = st[9] = true; i % pr[1] = 0 break
  i = 4
    j = 0, st[2*4] = st[8] = true; i % pr[0] = 0 break
  如果i=4 j=0的时候 不break
   则j=1 st[3*4] = st[12] = st[2*6];  st[12]不仅仅由其最小质因子2筛出,也将由3筛出, 出现重复筛选,与基础思想矛盾
